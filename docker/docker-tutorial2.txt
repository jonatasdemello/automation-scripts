
using WSL folder

\\wsl.localhost\Ubuntu-22.04\home\jonatas\django\helloworld-django

Tutorial:
https://docs.docker.com/get-started/02_our_app/
https://github.com/docker/getting-started-app.git

dockerfile
-------------------------------------------------------------------------------------------------------------------------------
# syntax=docker/dockerfile:1

FROM node:18-alpine
WORKDIR /app
COPY . .
RUN yarn install --production
CMD ["node", "src/index.js"]
EXPOSE 3000
-------------------------------------------------------------------------------------------------------------------------------

The CMD directive specifies the default command to run when starting a container from this image.


docker build -t getting-started .

docker run -dp 127.0.0.1:3000:3000 getting-started


-t flag tags your image
-d flag (short for --detach) runs the container in the background.
-p flag (short for --publish) creates a port mapping between the host and the container.
	The -p flag takes a string value in the format of HOST:CONTAINER,
	where HOST is the address on the host, and CONTAINER is the port on the container.

# Persising data

Start an ubuntu container that will create a file named /data.txt with a random number between 1 and 10000

docker run -d ubuntu bash -c "shuf -i 1-10000 -n 1 -o /data.txt && tail -f /dev/null"

docker exec <container-id> cat /data.txt

docker run -it ubuntu ls /

docker rm -f <container-id>


# Volumes

A volume mount is a great choice when you need somewhere persistent to store your application data.


docker volume create todo-db

docker run -dp 127.0.0.1:3000:3000 --mount type=volume,src=todo-db,target=/etc/todos getting-started

docker volume inspect

docker volume inspect todo-db
[
    {
        "CreatedAt": "2019-09-26T02:18:36Z",
        "Driver": "local",
        "Labels": {},
        "Mountpoint": "/var/lib/docker/volumes/todo-db/_data",
        "Name": "todo-db",
        "Options": {},
        "Scope": "local"
    }
]

The Mountpoint is the actual location of the data on the disk.


# Bind mounts

A bind mount is another type of mount, which lets you share a directory from the host's filesystem into the container.

When working on an application, you can use a bind mount to mount source code into the container.
The container sees the changes you make to the code immediately, as soon as you save a file.
This means that you can run processes in the container that watch for filesystem changes and respond to them.

